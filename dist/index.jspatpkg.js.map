{"version":3,"file":"index.jspatpkg.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA4C;AACF;AACI;AACF;AACI;AACF;AACF;AACF;AACI;AACF;AACQ;AACF;AACJ;AACF;AACI;AACF;AACA;AACF;AACI;AACF;AACE;AACF;AACE;AACF;AACQ;AACF;AACF;AACF;AACE;AACF;AACA;AACF;AACI;AACF;AACE;AACF;AACA;AACF;AACE;AACF;AACM;AACF;AACN;AACF;AACA;AACF;AACoB;AACF;AACZ;AACF;AACA;AACF;AACE;AACF;AACY;AACF;AACI;AACF;AACV;AACF;AACE;AACF;AACU;AACF;AACI;AACF;AACR;AACF;AACE;AACF;AACE;AACF;AACE;AACF;AACI;AACF;AACA;AACF;AACE;AACF;AACM;AACF;AACE;AACF;AACU;AACF;AACJ;AACF;AACF;AACF;AACE;AACF;AACE;AACF;AACE;AACF;AACA;AACF;AACM;AACF;AACI;AACF;AACJ;AACF;AACE;AACF;AACF;AACF;AAEtC,MAAM,MAAM;AAAA,EACR,KAAK;AAAA,IACD,QAAQ,gDAAQ;AAAR,IACR,MAAM,8CAAQ;AAAR,EACV;AAAA,EACA,MAAM;AAAA,IACF,QAAQ,iDAAS;AAAT,IACR,MAAM,+CAAS;AAAT,EACV;AAAA,EACA,OAAO;AAAA,IACH,QAAQ,kDAAU;AAAV,IACR,MAAM,gDAAU;AAAV,EACV;AAAA,EACA,KAAK;AAAA,IACD,QAAQ,gDAAQ;AAAR,IACR,MAAM,8CAAQ;AAAR,EACV;AAAA,EACA,MAAM;AAAA,IACF,QAAQ,iDAAS;AAAT,IACR,MAAM,+CAAS;AAAT,EACV;AAAA,EACA,SAAS;AAAA,IACL,QAAQ,qDAAY;AAAZ,IACR,MAAM,mDAAY;AAAZ,EACV;AAAA,EACA,MAAM;AAAA,IACF,QAAQ,kDAAS;AAAT,IACR,MAAM,gDAAS;AAAT,EACV;AAAA,EACA,OAAO;AAAA,IACH,QAAQ,mDAAU;AAAV,IACR,MAAM,iD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","sources":["webpack://@jspatcher/package-dsp/./dsps/dsps.ts","webpack://@jspatcher/package-dsp/./src/FaustDspObject.ts","webpack://@jspatcher/package-dsp/./src/getDsps.ts","webpack://@jspatcher/package-dsp/./src/index.ts","webpack://@jspatcher/package-dsp/./src/package-info.ts","webpack://@jspatcher/package-dsp/./src/sdk.ts","webpack://@jspatcher/package-dsp/webpack/bootstrap","webpack://@jspatcher/package-dsp/webpack/runtime/define property getters","webpack://@jspatcher/package-dsp/webpack/runtime/hasOwnProperty shorthand","webpack://@jspatcher/package-dsp/webpack/runtime/make namespace object","webpack://@jspatcher/package-dsp/./src/index.jspatpkg.ts"],"sourcesContent":["import wasm_abs from \"./abs/dspModule.wasm\";\nimport json_abs from \"./abs/dspMeta.json\";\nimport wasm_acos from \"./acos/dspModule.wasm\";\nimport json_acos from \"./acos/dspMeta.json\";\nimport wasm_acosh from \"./acosh/dspModule.wasm\";\nimport json_acosh from \"./acosh/dspMeta.json\";\nimport wasm_add from \"./add/dspModule.wasm\";\nimport json_add from \"./add/dspMeta.json\";\nimport wasm_adsr from \"./adsr/dspModule.wasm\";\nimport json_adsr from \"./adsr/dspMeta.json\";\nimport wasm_allpass from \"./allpass/dspModule.wasm\";\nimport json_allpass from \"./allpass/dspMeta.json\";\nimport wasm_asin from \"./asin/dspModule.wasm\";\nimport json_asin from \"./asin/dspMeta.json\";\nimport wasm_asinh from \"./asinh/dspModule.wasm\";\nimport json_asinh from \"./asinh/dspMeta.json\";\nimport wasm_atan from \"./atan/dspModule.wasm\";\nimport json_atan from \"./atan/dspMeta.json\";\nimport wasm_atan2 from \"./atan2/dspModule.wasm\";\nimport json_atan2 from \"./atan2/dspMeta.json\";\nimport wasm_atanh from \"./atanh/dspModule.wasm\";\nimport json_atanh from \"./atanh/dspMeta.json\";\nimport wasm_atodb from \"./atodb/dspModule.wasm\";\nimport json_atodb from \"./atodb/dspMeta.json\";\nimport wasm_bandpass from \"./bandpass/dspModule.wasm\";\nimport json_bandpass from \"./bandpass/dspMeta.json\";\nimport wasm_biquad from \"./biquad/dspModule.wasm\";\nimport json_biquad from \"./biquad/dspMeta.json\";\nimport wasm_bitand from \"./bitand/dspModule.wasm\";\nimport json_bitand from \"./bitand/dspMeta.json\";\nimport wasm_bitor from \"./bitor/dspModule.wasm\";\nimport json_bitor from \"./bitor/dspMeta.json\";\nimport wasm_bitxor from \"./bitxor/dspModule.wasm\";\nimport json_bitxor from \"./bitxor/dspMeta.json\";\nimport wasm_change from \"./change/dspModule.wasm\";\nimport json_change from \"./change/dspMeta.json\";\nimport wasm_cycle from \"./cycle/dspModule.wasm\";\nimport json_cycle from \"./cycle/dspMeta.json\";\nimport wasm_dbtoa from \"./dbtoa/dspModule.wasm\";\nimport json_dbtoa from \"./dbtoa/dspMeta.json\";\nimport wasm_distort from \"./distort/dspModule.wasm\";\nimport json_distort from \"./distort/dspMeta.json\";\nimport wasm_div from \"./div/dspModule.wasm\";\nimport json_div from \"./div/dspMeta.json\";\nimport wasm_eq from \"./eq/dspModule.wasm\";\nimport json_eq from \"./eq/dspMeta.json\";\nimport wasm_filtercoeff from \"./filtercoeff/dspModule.wasm\";\nimport json_filtercoeff from \"./filtercoeff/dspMeta.json\";\nimport wasm_ftom from \"./ftom/dspModule.wasm\";\nimport json_ftom from \"./ftom/dspMeta.json\";\nimport wasm_geq from \"./geq/dspModule.wasm\";\nimport json_geq from \"./geq/dspMeta.json\";\nimport wasm_gtr from \"./gtr/dspModule.wasm\";\nimport json_gtr from \"./gtr/dspMeta.json\";\nimport wasm_highpass from \"./highpass/dspModule.wasm\";\nimport json_highpass from \"./highpass/dspMeta.json\";\nimport wasm_highshelf from \"./highshelf/dspModule.wasm\";\nimport json_highshelf from \"./highshelf/dspMeta.json\";\nimport wasm_leq from \"./leq/dspModule.wasm\";\nimport json_leq from \"./leq/dspMeta.json\";\nimport wasm_log from \"./log/dspModule.wasm\";\nimport json_log from \"./log/dspMeta.json\";\nimport wasm_lowpass from \"./lowpass/dspModule.wasm\";\nimport json_lowpass from \"./lowpass/dspMeta.json\";\nimport wasm_lowshelf from \"./lowshelf/dspModule.wasm\";\nimport json_lowshelf from \"./lowshelf/dspMeta.json\";\nimport wasm_lss from \"./lss/dspModule.wasm\";\nimport json_lss from \"./lss/dspMeta.json\";\nimport wasm_max from \"./max/dspModule.wasm\";\nimport json_max from \"./max/dspMeta.json\";\nimport wasm_min from \"./min/dspModule.wasm\";\nimport json_min from \"./min/dspMeta.json\";\nimport wasm_mod from \"./mod/dspModule.wasm\";\nimport json_mod from \"./mod/dspMeta.json\";\nimport wasm_mtof from \"./mtof/dspModule.wasm\";\nimport json_mtof from \"./mtof/dspMeta.json\";\nimport wasm_mul from \"./mul/dspModule.wasm\";\nimport json_mul from \"./mul/dspMeta.json\";\nimport wasm_neq from \"./neq/dspModule.wasm\";\nimport json_neq from \"./neq/dspMeta.json\";\nimport wasm_noise from \"./noise/dspModule.wasm\";\nimport json_noise from \"./noise/dspMeta.json\";\nimport wasm_notch from \"./notch/dspModule.wasm\";\nimport json_notch from \"./notch/dspMeta.json\";\nimport wasm_peaknotch from \"./peaknotch/dspModule.wasm\";\nimport json_peaknotch from \"./peaknotch/dspMeta.json\";\nimport wasm_phasor from \"./phasor/dspModule.wasm\";\nimport json_phasor from \"./phasor/dspMeta.json\";\nimport wasm_pink from \"./pink/dspModule.wasm\";\nimport json_pink from \"./pink/dspMeta.json\";\nimport wasm_rdiv from \"./rdiv/dspModule.wasm\";\nimport json_rdiv from \"./rdiv/dspMeta.json\";\nimport wasm_rect from \"./rect/dspModule.wasm\";\nimport json_rect from \"./rect/dspMeta.json\";\nimport wasm_rsub from \"./rsub/dspModule.wasm\";\nimport json_rsub from \"./rsub/dspMeta.json\";\nimport wasm_sah from \"./sah/dspModule.wasm\";\nimport json_sah from \"./sah/dspMeta.json\";\nimport wasm_slide from \"./slide/dspModule.wasm\";\nimport json_slide from \"./slide/dspMeta.json\";\nimport wasm_smooth from \"./smooth/dspModule.wasm\";\nimport json_smooth from \"./smooth/dspMeta.json\";\nimport wasm_sub from \"./sub/dspModule.wasm\";\nimport json_sub from \"./sub/dspMeta.json\";\nimport wasm_tri from \"./tri/dspModule.wasm\";\nimport json_tri from \"./tri/dspMeta.json\";\nimport wasm__ from \"./_/dspModule.wasm\";\nimport json__ from \"./_/dspMeta.json\";\n\nconst map = {\n    abs: {\n        module: wasm_abs,\n        json: json_abs\n    },\n    acos: {\n        module: wasm_acos,\n        json: json_acos\n    },\n    acosh: {\n        module: wasm_acosh,\n        json: json_acosh\n    },\n    add: {\n        module: wasm_add,\n        json: json_add\n    },\n    adsr: {\n        module: wasm_adsr,\n        json: json_adsr\n    },\n    allpass: {\n        module: wasm_allpass,\n        json: json_allpass\n    },\n    asin: {\n        module: wasm_asin,\n        json: json_asin\n    },\n    asinh: {\n        module: wasm_asinh,\n        json: json_asinh\n    },\n    atan: {\n        module: wasm_atan,\n        json: json_atan\n    },\n    atan2: {\n        module: wasm_atan2,\n        json: json_atan2\n    },\n    atanh: {\n        module: wasm_atanh,\n        json: json_atanh\n    },\n    atodb: {\n        module: wasm_atodb,\n        json: json_atodb\n    },\n    bandpass: {\n        module: wasm_bandpass,\n        json: json_bandpass\n    },\n    biquad: {\n        module: wasm_biquad,\n        json: json_biquad\n    },\n    bitand: {\n        module: wasm_bitand,\n        json: json_bitand\n    },\n    bitor: {\n        module: wasm_bitor,\n        json: json_bitor\n    },\n    bitxor: {\n        module: wasm_bitxor,\n        json: json_bitxor\n    },\n    change: {\n        module: wasm_change,\n        json: json_change\n    },\n    cycle: {\n        module: wasm_cycle,\n        json: json_cycle\n    },\n    dbtoa: {\n        module: wasm_dbtoa,\n        json: json_dbtoa\n    },\n    distort: {\n        module: wasm_distort,\n        json: json_distort\n    },\n    div: {\n        module: wasm_div,\n        json: json_div\n    },\n    eq: {\n        module: wasm_eq,\n        json: json_eq\n    },\n    filtercoeff: {\n        module: wasm_filtercoeff,\n        json: json_filtercoeff\n    },\n    ftom: {\n        module: wasm_ftom,\n        json: json_ftom\n    },\n    geq: {\n        module: wasm_geq,\n        json: json_geq\n    },\n    gtr: {\n        module: wasm_gtr,\n        json: json_gtr\n    },\n    highpass: {\n        module: wasm_highpass,\n        json: json_highpass\n    },\n    highshelf: {\n        module: wasm_highshelf,\n        json: json_highshelf\n    },\n    leq: {\n        module: wasm_leq,\n        json: json_leq\n    },\n    log: {\n        module: wasm_log,\n        json: json_log\n    },\n    lowpass: {\n        module: wasm_lowpass,\n        json: json_lowpass\n    },\n    lowshelf: {\n        module: wasm_lowshelf,\n        json: json_lowshelf\n    },\n    lss: {\n        module: wasm_lss,\n        json: json_lss\n    },\n    max: {\n        module: wasm_max,\n        json: json_max\n    },\n    min: {\n        module: wasm_min,\n        json: json_min\n    },\n    mod: {\n        module: wasm_mod,\n        json: json_mod\n    },\n    mtof: {\n        module: wasm_mtof,\n        json: json_mtof\n    },\n    mul: {\n        module: wasm_mul,\n        json: json_mul\n    },\n    neq: {\n        module: wasm_neq,\n        json: json_neq\n    },\n    noise: {\n        module: wasm_noise,\n        json: json_noise\n    },\n    notch: {\n        module: wasm_notch,\n        json: json_notch\n    },\n    peaknotch: {\n        module: wasm_peaknotch,\n        json: json_peaknotch\n    },\n    phasor: {\n        module: wasm_phasor,\n        json: json_phasor\n    },\n    pink: {\n        module: wasm_pink,\n        json: json_pink\n    },\n    rdiv: {\n        module: wasm_rdiv,\n        json: json_rdiv\n    },\n    rect: {\n        module: wasm_rect,\n        json: json_rect\n    },\n    rsub: {\n        module: wasm_rsub,\n        json: json_rsub\n    },\n    sah: {\n        module: wasm_sah,\n        json: json_sah\n    },\n    slide: {\n        module: wasm_slide,\n        json: json_slide\n    },\n    smooth: {\n        module: wasm_smooth,\n        json: json_smooth\n    },\n    sub: {\n        module: wasm_sub,\n        json: json_sub\n    },\n    tri: {\n        module: wasm_tri,\n        json: json_tri\n    },\n    _: {\n        module: wasm__,\n        json: json__\n    }\n};\n\nexport default map as unknown as Record<string, { module: string; json: string }>;\n","import type { FaustAudioWorkletNode, FaustDspMeta, FaustMonoDspGenerator, LooseFaustDspFactory } from \"@shren/faustwasm\";\r\nimport { author, name, version, description } from \"./index\";\r\nimport { Bang, DefaultObject, DefaultUI } from \"./sdk\";\r\nimport type { IArgsMeta, IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport interface FaustDspInternalState {\r\n    dspFactory: LooseFaustDspFactory;\r\n    faustDspGenerator: FaustMonoDspGenerator;\r\n    dspId: string;\r\n    merger: ChannelMergerNode;\r\n    node: FaustAudioWorkletNode;\r\n    splitter: ChannelSplitterNode;\r\n    defaultInputs: [];\r\n    constants: ConstantSourceNode[];\r\n    constantsConnected: boolean[];\r\n    argsOffset: number;\r\n}\r\n\r\ninterface Props {\r\n    smoothInput: number;\r\n}\r\n\r\nexport default class FaustDspObject<\r\n    S = {},\r\n    I extends [Bang | any, ...any[]] = [Bang],\r\n    O extends any[] = [],\r\n    A extends any[] = any[],\r\n    P = Partial<Props> & Record<string, any>\r\n> extends DefaultObject<{}, S, I, O, A, P & Props> {\r\n    static package = name;\r\n    static author = author;\r\n    static version = version;\r\n    static description = description;\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"signal\",\r\n        description: \"audio input connection\",\r\n        varLength: true\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"signal\",\r\n        description: \"audio output connection\",\r\n        varLength: true\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"number\",\r\n        optional: true,\r\n        varLength: true,\r\n        description: \"Initial inputs\",\r\n        default: 0\r\n    }];\r\n    static props: IPropsMeta<Props> = {\r\n        smoothInput: {\r\n            type: \"number\",\r\n            description: \"Linear interpolate to input values within a duration in seconds\",\r\n            default: 0,\r\n        }\r\n    };\r\n    static UI = DefaultUI;\r\n    _: Partial<FaustDspInternalState> = {\r\n        defaultInputs: [],\r\n        constants: [],\r\n        constantsConnected: [],\r\n        argsOffset: 0\r\n    };\r\n    get audioConnections() {\r\n        return this.inletLines.map(set => [...set].find(l => !l.disabled && l.isConnectableByAudio)).map(l => !!l);\r\n    }\r\n    checkAndFillUnconnected() {\r\n        const { audioConnections } = this;\r\n        const { constants, constantsConnected } = this._;\r\n        if (!this.inlets) return;\r\n        for (let i = 0; i < this.inlets; i++) {\r\n            if (audioConnections[i] === constantsConnected[i]) continue;\r\n            const constant = constants[i];\r\n            if (audioConnections[i]) {\r\n                constant.offset.value = 0;\r\n            } else if (!audioConnections[i] && !constantsConnected[i]) {\r\n                constant.offset.value = this._.defaultInputs[i] || 0;\r\n            }\r\n            constantsConnected[i] = audioConnections[i];\r\n        }\r\n    }\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            const meta: FaustDspMeta = JSON.parse(this._.dspFactory.json);\r\n            const { inputs, outputs } = meta;\r\n            if (inputs) {\r\n                const merger = this.audioCtx.createChannelMerger(inputs);\r\n                this._.merger = merger;\r\n                for (let i = 0; i < inputs; i++) {\r\n                    const constant = this.audioCtx.createConstantSource();\r\n                    this._.constants[i] = constant;\r\n                    constant.connect(merger, 0, i);\r\n                    this._.constantsConnected[i] = false;\r\n                }\r\n            }\r\n            const splitter = this.audioCtx.createChannelSplitter(outputs);\r\n            this._.splitter = splitter;\r\n\r\n            this.inlets = inputs;\r\n            this.outlets = outputs;\r\n            this.disconnectAudio();\r\n            this.inletAudioConnections = this._.constants.map((node) => ({ node: node.offset, index: 0 }));\r\n            this.outletAudioConnections = new Array(outputs).fill(null).map((v, i) => ({ node: splitter, index: i }));\r\n            this.connectAudio();\r\n        });\r\n        this.on(\"postInit\", async () => {\r\n            const { dspFactory, faustDspGenerator, dspId, constants, merger, splitter, argsOffset } = this._;\r\n            const node = await faustDspGenerator.createNode(this.audioCtx, dspId, dspFactory);\r\n            this._.node = node;\r\n            this.checkAndFillUnconnected();\r\n            merger?.connect(node);\r\n            node.connect(splitter);\r\n            constants.forEach((constant, i) => {\r\n                if (!this._.constantsConnected[i]) constant.offset.value = +this.args[i - argsOffset] || (this._.defaultInputs[i] ?? 0);\r\n                constant.start();\r\n            });\r\n        });\r\n        this.on(\"argsUpdated\", () => {\r\n            this._.constants.forEach((constant, i) => {\r\n                if (!this._.constantsConnected[i]) constant.offset.value = +this.args[i - this._.argsOffset] || (this._.defaultInputs[i] ?? 0);\r\n            });\r\n        })\r\n        this.on(\"inlet\", ({ inlet, data }) => {\r\n            if (typeof data === \"number\") {\r\n                if (this._.constants[inlet] && !this._.constantsConnected[inlet]) {\r\n                    const constant = this._.constants[inlet];\r\n                    constant.offset.value = constant.offset.value;\r\n                    constant.offset.linearRampToValueAtTime(data, this.audioCtx.currentTime + this.getProp(\"smoothInput\"));\r\n                }\r\n            }\r\n        });\r\n        this.on(\"connectedInlet\", () => this.checkAndFillUnconnected());\r\n        this.on(\"disconnectedInlet\", () => this.checkAndFillUnconnected());\r\n        this.on(\"destroy\", () => {\r\n            const { constants, merger, splitter, node } = this._;\r\n            constants.forEach(constant => constant?.disconnect());\r\n            merger?.disconnect();\r\n            splitter?.disconnect();\r\n            node?.disconnect();\r\n            node?.destroy();\r\n        })\r\n    }\r\n}\r\n","import type { LooseFaustDspFactory } from \"@shren/faustwasm\";\r\n\r\nimport dspsRaw from \"../dsps/dsps\";\r\n\r\n/*\r\nexport default async () => {\r\n    const dsps: Record<string, LooseFaustDspFactory> = {};\r\n    const listIn = await import(\"../dsps/dsps.json\") as any;\r\n    const list = JSON.parse(listIn.default);\r\n    for (const dspId of list) {\r\n        const moduleUri = (await import(`../dsps/${dspId}/dspModule.wasm`)).default as string;\r\n        const moduleRes = await fetch(moduleUri);\r\n        const module = await WebAssembly.compileStreaming(moduleRes);\r\n        const json = (await import(`../dsps/${dspId}/dspMeta.json`)).default;\r\n        dsps[dspId] = {\r\n            module,\r\n            json\r\n        }\r\n    }\r\n    return dsps;\r\n};\r\n*/\r\n\r\nexport default async () => {\r\n    const dsps: Record<string, LooseFaustDspFactory> = {};\r\n    for (const dspId in dspsRaw) {\r\n        const { module: moduleUri, json } = dspsRaw[dspId];\r\n        const moduleRes = await fetch(moduleUri);\r\n        const module = await WebAssembly.compileStreaming(moduleRes);\r\n        dsps[dspId] = {\r\n            module,\r\n            json\r\n        }\r\n    }\r\n    return dsps;\r\n}\r\n\r\n","import packageInfo from \"./package-info\";\r\nimport type { IExternalPackage } from \"@jspatcher/jspatcher/src/core/GlobalPackageManager\";\r\n\r\nexport const name = packageInfo.name.split(\"/\").pop().replace(/^package-/, '');\r\n\r\nexport const { author, license, keywords, version, description, jspatcher } = packageInfo;\r\n\r\nexport default { name, author, license, keywords, version, description, ...jspatcher } as IExternalPackage;\r\n","const json = require(\"../package.json\");\r\n\r\nexport default JSON.parse(json);\r\n","import type { IJSPatcherSDK } from \"@jspatcher/jspatcher/src/core/SDK\";\r\n\r\nconst sdk = (globalThis as any).jspatcherEnv.sdk as IJSPatcherSDK;\r\nexport const {\r\n    React,\r\n    PatcherAudio,\r\n    Patcher,\r\n    Box,\r\n    Line,\r\n    BaseObject,\r\n    BaseUI,\r\n    DefaultObject,\r\n    DefaultUI,\r\n    generateRemotedObject,\r\n    generateDefaultObject,\r\n    generateRemoteObject,\r\n    Bang,\r\n    isBang\r\n} = sdk;\r\n\r\nexport interface Bang extends InstanceType<typeof Bang> {}\r\nexport interface PatcherAudio extends InstanceType<typeof PatcherAudio> {}\r\nexport interface Patcher extends InstanceType<typeof Patcher> {}\r\nexport interface Box extends InstanceType<typeof Box> {}\r\nexport interface Line extends InstanceType<typeof Line> {}\r\nexport interface BaseObject extends InstanceType<typeof BaseObject> {}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { FaustDspMeta } from \"@shren/faustwasm\";\r\nimport getDsps from \"./getDsps\";\r\nimport FaustDspObject, { FaustDspInternalState } from \"./FaustDspObject\";\r\nimport { description } from \"./index\";\r\nimport { IArgMeta, IInletMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default async () => {\r\n    const objects: Record<string, typeof FaustDspObject> = {};\r\n    const dspIdMap: Record<string, string> = {\r\n        add: \"+\",\r\n        sub: \"-\",\r\n        rsub: \"!-\",\r\n        mul: \"*\",\r\n        div: \"/\",\r\n        rdiv: \"!/\",\r\n        gtr: \">\",\r\n        geq: \">=\",\r\n        lss: \"<\",\r\n        leq: \"<=\",\r\n        eq: \"=\",\r\n        neq: \"!=\",\r\n        mod: \"%\",\r\n        bitand: \"&\",\r\n        bitor: \"|\",\r\n        max: \"maximum\",\r\n        min: \"minimum\",\r\n    };\r\n    const dsps = await getDsps();\r\n    for (const dspId in dsps) {\r\n        const dspFactory = dsps[dspId];\r\n        const meta: FaustDspMeta = JSON.parse(dspFactory.json);\r\n        const { meta: declaredMeta } = meta;\r\n        const descr = declaredMeta.find(m => \"description\" in m)?.description || description;\r\n        const defaultInputsStr = declaredMeta.find(m => \"defaultInputs\" in m)?.defaultInputs;\r\n        const defaultInputs = defaultInputsStr ? JSON.parse(defaultInputsStr) : [];\r\n        const argsOffset = +declaredMeta.find(m => \"argsOffset\" in m)?.argsOffset || 0;\r\n        const inputsDescr = declaredMeta.find(m => \"inputsDescription\" in m)?.inputsDescription;\r\n        const inputsDescrArr = inputsDescr ? JSON.parse(inputsDescr.replace(/`/g, '\"')) as string[] : null;\r\n        objects[`${dspIdMap[dspId] || dspId}~`] = class extends FaustDspObject<any, any, any, any, any> {\r\n            static description = descr;\r\n            static inlets = (inputsDescrArr || [null]).map((d) => ({\r\n                isHot: true,\r\n                type: \"signal\",\r\n                description: d || \"audio input connection\",\r\n                varLength: true\r\n            } as IInletMeta));\r\n            static args = inputsDescrArr?.slice(argsOffset).map((d, i) => ({\r\n                type: \"number\",\r\n                optional: true,\r\n                varLength: true,\r\n                description: d || `arg${i}`,\r\n                default: defaultInputs[i + argsOffset] || 0\r\n            }) as IArgMeta) || [{\r\n                type: \"number\",\r\n                optional: true,\r\n                varLength: true,\r\n                description: \"Initial inputs\",\r\n                default: 0\r\n            } as IArgMeta];\r\n            _: FaustDspInternalState = {\r\n                ...this._,\r\n                dspFactory,\r\n                dspId,\r\n                faustDspGenerator: new this.env.Faust.FaustMonoDspGenerator(),\r\n                defaultInputs,\r\n                argsOffset\r\n            }\r\n        }\r\n    }\r\n    return objects;\r\n};\r\n"],"names":[],"sourceRoot":""}